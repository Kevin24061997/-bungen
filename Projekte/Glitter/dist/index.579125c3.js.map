{"mappings":"AAAA;;;;;;CAMC,GAED,MAAM;IACJ,GAAG;IACH,KAAK;IACL,KAAK;IACL,SAAS;IAET,YAAY,IAAI,CAAE;QAChB,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE;QACjB,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI;QACrB,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI;QACrB,IAAI,CAAC,QAAQ,GACX,IAAI,KAAK,KAAK,QAAQ,EAAE,kBAAkB,KAC1C,MACA,IAAI,KAAK,KAAK,QAAQ,EAAE,kBAAkB;IAC9C;AACF;AAEA,SAAS,WAAW,KAAK,EAAE;IACzB,OAAO,CAAC;;;;;;;;;;;;;kDAawC,EAAE,MAAM,IAAI,CAAC;kDACb,EAAE,MAAM,IAAI,CAAC;;;;;;;;;;;;;;EAc7D,CAAC;AACH;AAEA,SAAS,cAAc,MAAM,EAAE;IAC7B,OACG,GAAG,CAAC,CAAC,QAAU,WAAW,QAC1B,OAAO,CACN,CAAC,QAAW,SAAS,cAAc,CAAC,kBAAkB,SAAS,IAAI;AAEzE;AAEA;;;CAGC,GACD,SAAS,YAAY;IACnB,QAAQ,GAAG,CAAC;IACZ,MAAM,YAAY,SAAS,cAAc,CAAC,eAAe,KAAK;IAC9D,MAAM,YAAY,SAAS,cAAc,CAAC,eAAe,KAAK;IAC9D,mBAAmB,WAAW;AAChC;AAEA;;;CAGC,GACD,SAAS,uBAAuB;IAC9B,MAAM,gCACH,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,OAAS;QACd,MAAM,SAAS,KAAK,GAAG,CAAC,CAAC,QAAU,IAAI,MAAM;QAC7C,cAAc;IAChB,GACC,KAAK,CAAC,CAAC,MAAQ;QACd,QAAQ,GAAG,CAAC;IACd;AACJ;AAEA,SAAS,mBAAmB,SAAS,EAAE,SAAS,EAAE;IAChD,QAAQ,GAAG,CAAC;IACZ,MAAM,cAAc;QAClB,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YACnB,MAAM;YACN,MAAM;YACN,UAAU,IAAI;QAChB;IACF;IAEA,MAAM,gCAAgC,aAAa,IAAI,CAAC,CAAC,MAAQ;QAC3D,IAAI,MAAM,KAAK,OAAO,IAAI,MAAM;IAEtC;AACF;AAEA,QAAQ;AACR","sources":["src/index.js"],"sourcesContent":["/**\n * 1. ✅ Daten vom Backend holen.\n * 2. ✅ Daten verarbeiten / aufbereiten.\n * 3. ✅ Card erzeugen.\n * 4. ✅ Card anzeigen.\n *\n */\n\nclass Glitt {\n  id;\n  user;\n  text;\n  datetime;\n\n  constructor(data) {\n    this.id = data.id;\n    this.user = data.user;\n    this.text = data.text;\n    this.datetime =\n      new Date(data.datetime).toLocaleDateString() +\n      \" \" +\n      new Date(data.datetime).toLocaleTimeString();\n  }\n}\n\nfunction renderCard(glitt) {\n  return `\n    <div class=\"container\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-4\" id=\"user_id\"></div>\n              <div class=\"col-4\" id=\"user_mail\"></div>\n              <div class=\"col-4\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"\"card-title id=\"glitt_title\">${glitt.user}</h5>\n          <p class=\"card-text\" id=\"glitt_message\">${glitt.text}</p>\n        </div>\n        <div class=\"card-footer\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <div class=\"col\"><i class=\"fa-light fa-comment\"></i></div>\n                <div class=\"col\"><i class=\"fa-solid fa-retweet\"></i></div>\n                <div class=\"col\"><i class=\"fa-light fa-heart\"></i></div>\n                <div class=\"col\"><i class=\"fa-solid fa-arrow-up-from-bracket\"></i></div>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction displayGlitts(glitts) {\n  glitts\n    .map((glitt) => renderCard(glitt))\n    .forEach(\n      (glitt) => (document.getElementById(\"card-container\").innerHTML += glitt)\n    );\n}\n\n/**\n * Handles the onClick event of the save button when creating a new Glitt.\n *\n */\nfunction saveGlitt() {\n  console.log(\"Save Glitt clicked\");\n  const glittText = document.getElementById(\"inputt_text\").value;\n  const glittName = document.getElementById(\"inputt_name\").value;\n  postGlittToBackend(glittName, glittText);\n}\n\n/**\n * This function fetches the data from the backend.\n *\n */\nfunction getGlittsFromBackend() {\n  fetch(\"http://localhost:4000/glitts\")\n    .then((res) => res.json())\n    .then((json) => {\n      const glitts = json.map((glitt) => new Glitt(glitt));\n      displayGlitts(glitts);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nfunction postGlittToBackend(glittName, glittText) {\n  console.log(\"Prepare to post new glitt\");\n  const fetchConfig = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      text: glittText,\n      user: glittName,\n      datetime: new Date(),\n    }),\n  };\n\n  fetch(\"http://localhost:4000/glitts\", fetchConfig).then((res) => {\n    if (res.status === 200 || res.status === 201) {\n    }\n  });\n}\n\n/// MAIN\ngetGlittsFromBackend();\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}